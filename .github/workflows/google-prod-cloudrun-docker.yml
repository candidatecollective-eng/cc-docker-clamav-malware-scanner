name: Build and Deploy to :Production Cloud Run

on:
  push:
    branches: ["main"]

jobs:
  deploy-prod:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    env:
      PROJECT_ID: candidate-collective-app
      GAR_LOCATION: us-central1
      REPOSITORY: candidate-collective-repo
      SERVICE: cc-api
      REGION: us-central1
      IMAGE_NAME: "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE:${{ github.sha }}" 

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_PROD }}

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS_PROD }}
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build Container

        run: docker build -t ${{ env.IMAGE_NAME }} -f api.Dockerfile .

      # Only push the image if the workflow was triggered by a push to the "main" branch
      - name: Push Container to Google Artifact Registry
        if: github.event_name == 'push'
        run: docker push ${{ env.IMAGE_NAME }}


      # TODO - Replace deploy with TF deploy
      - name: Create Service declaration
        if: github.event_name == 'push'
        run: |-
          export IMAGE="${{ env.IMAGE_NAME }}"
          export CONFIG_JSON="${{ secret.PROD_CONFIG_JSON }}"
          envsubst < ./deploy/service.template.prod.yaml > container.yaml
          cat container.yaml

      - name: Deploy to Cloud Run
        if: github.event_name == 'push'
        uses: google-github-actions/deploy-cloudrun@v2.2.0
        with:
          region: ${{ env.REGION }}
          metadata: container.yaml